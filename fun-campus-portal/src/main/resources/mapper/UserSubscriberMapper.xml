<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.akkkka.funcampusnotice.mapper.UserSubscriberMapper">
    
    <resultMap type="UserSubscriber" id="UserSubscriberResult">
        <result property="uid"    column="uid"    />
        <result property="publisherUid"    column="publisher_uid"    />
        <result property="subscricberUid"    column="subscricber_uid"    />
        <result property="deleted"    column="deleted"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedTime"    column="updated_time"    />
    </resultMap>

    <sql id="selectUserSubscriberVo">
        select uid, publisher_uid, subscricber_uid, deleted, created_time, updated_time from user_subscriber
    </sql>

    <select id="selectUserSubscriberList" parameterType="UserSubscriber" resultMap="UserSubscriberResult">
        <include refid="selectUserSubscriberVo"/>
        <where>  
            <if test="publisherUid != null  and publisherUid != ''"> and publisher_uid = #{publisherUid}</if>
            <if test="subscricberUid != null  and subscricberUid != ''"> and subscricber_uid = #{subscricberUid}</if>
            <if test="deleted != null "> and deleted = #{deleted}</if>
            <if test="createdTime != null "> and created_time = #{createdTime}</if>
            <if test="updatedTime != null "> and updated_time = #{updatedTime}</if>
        </where>
    </select>
    
    <select id="selectUserSubscriberByUid" parameterType="String" resultMap="UserSubscriberResult">
        <include refid="selectUserSubscriberVo"/>
        where uid = #{uid}
    </select>

    <insert id="insertUserSubscriber" parameterType="UserSubscriber">
        insert into user_subscriber
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">uid,</if>
            <if test="publisherUid != null and publisherUid != ''">publisher_uid,</if>
            <if test="subscricberUid != null and subscricberUid != ''">subscricber_uid,</if>
            <if test="deleted != null">deleted,</if>
            <if test="createdTime != null">created_time,</if>
            <if test="updatedTime != null">updated_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">#{uid},</if>
            <if test="publisherUid != null and publisherUid != ''">#{publisherUid},</if>
            <if test="subscricberUid != null and subscricberUid != ''">#{subscricberUid},</if>
            <if test="deleted != null">#{deleted},</if>
            <if test="createdTime != null">#{createdTime},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
         </trim>
    </insert>

    <update id="updateUserSubscriber" parameterType="UserSubscriber">
        update user_subscriber
        <trim prefix="SET" suffixOverrides=",">
            <if test="publisherUid != null and publisherUid != ''">publisher_uid = #{publisherUid},</if>
            <if test="subscricberUid != null and subscricberUid != ''">subscricber_uid = #{subscricberUid},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="createdTime != null">created_time = #{createdTime},</if>
            <if test="updatedTime != null">updated_time = #{updatedTime},</if>
        </trim>
        where uid = #{uid}
    </update>

    <delete id="deleteUserSubscriberByUid" parameterType="String">
        delete from user_subscriber where uid = #{uid}
    </delete>

    <delete id="deleteUserSubscriberByUids" parameterType="String">
        delete from user_subscriber where uid in 
        <foreach item="uid" collection="array" open="(" separator="," close=")">
            #{uid}
        </foreach>
    </delete>
</mapper>