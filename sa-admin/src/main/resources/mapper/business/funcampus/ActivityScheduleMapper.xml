<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.lab1024.sa.admin.module.business.funcampus.activityWithSchedule.dao.ActivityScheduleDao">

    <!-- 查询结果列 -->
    <sql id="base_columns">
        activity_schedule.activity_id,
        activity_schedule.enroll_start_time,
        activity_schedule.enroll_end_time,
        activity_schedule.activity_start_time,
        activity_schedule.activity_end_time,
        activity_schedule.signin_start_time,
        activity_schedule.signin_end_time,
        activity_schedule.create_time,
        activity_schedule.update_time,
        activity_schedule.deleted_flag
    </sql>

    <!-- 分页查询 -->
    <select id="queryPage" resultType="net.lab1024.sa.admin.module.business.funcampus.activityWithSchedule.domain.vo.ActivityScheduleVO">
        SELECT
        <include refid="base_columns"/>
        FROM activity_schedule
    </select>

    <update id="batchUpdateDeleted">
        update activity_schedule set deleted_flag = #{deletedFlag}
        where activity_id in
        <foreach collection="idList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>

    <update id="updateDeleted">
        update activity_schedule set deleted_flag = #{deletedFlag}
        where activity_id = #{activityId}
    </update>
    
    <!-- 根据活动ID列表查询时间表 -->
    <select id="selectByActivityIds" resultType="net.lab1024.sa.admin.module.business.funcampus.activityWithSchedule.domain.entity.ActivityScheduleEntity">
        SELECT
        <include refid="base_columns"/>
        FROM activity_schedule
        WHERE activity_id IN
        <foreach collection="activityIds" open="(" close=")" separator="," item="activityId">
            #{activityId}
        </foreach>
        AND deleted_flag = 0
    </select>
    
    <!-- 查询指定时间范围内有关键时间点的活动 -->
    <select id="selectActivitiesWithKeyTime" resultType="net.lab1024.sa.admin.module.business.funcampus.activityWithSchedule.domain.entity.ActivityScheduleEntity">
        SELECT
        <include refid="base_columns"/>
        FROM activity_schedule
        WHERE deleted_flag = 0
        AND (
            (enroll_start_time BETWEEN #{startTime} AND #{endTime}) OR
            (enroll_end_time BETWEEN #{startTime} AND #{endTime}) OR
            (activity_start_time BETWEEN #{startTime} AND #{endTime}) OR
            (activity_end_time BETWEEN #{startTime} AND #{endTime})
        )
    </select>
</mapper>